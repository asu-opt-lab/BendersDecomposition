
=====================================================================

Julia 1.10.4

To launch use the command "julia"

=====================================================================

  

=====================================================================

CPLEX 22.1.1

Using the command "cplex" will launch the program

=====================================================================

  

=====================================================================
This module is intended solely for building or source activating user
python environments, i.e.,

    mamba create -n myenv -c conda-forge

or

    source activate myenv

To list available environments, run:

    mamba info --envs

See our docs: https://links.asu.edu/solpy

Any other use is NOT TESTED.
=====================================================================

  

=====================================================================
Gurobi 11.0.2

To use this software, use the command gurobi.sh
=====================================================================

  
[ Info: Dict{String, Any}("algorithm_params" => Dict{String, Any}("time_limit" => 7200.0, "verbose" => false, "solver" => "CPLEX", "gap_tolerance" => 1.0e-9), "cut_strategy" => Dict{String, Any}("include_master_cuts" => true, "use_two_sided_cuts" => true, "norm_type" => "L1NORM", "reuse_dcglp" => true, "verbose" => false, "cut_strengthening" => "PURE_DISJUNCTION", "type" => "DISJUNCTIVE_CUT", "base_cut_strategy" => "FAT_KNAPSACK_CUT"), "solver_params" => Dict{String, Any}("sub" => Dict{String, Any}("CPX_PARAM_EPRHS" => 1.0e-9, "solver" => "CPLEX", "CPX_PARAM_EPINT" => 0.0, "CPX_PARAM_EPGAP" => 1.0e-9), "master" => Dict{String, Any}("CPX_PARAM_EPRHS" => 1.0e-9, "solver" => "CPLEX", "CPX_PARAM_EPINT" => 0.0, "CPX_PARAM_EPGAP" => 1.0e-9), "dcglp" => Dict{String, Any}("CPX_PARAM_EPRHS" => 1.0e-9, "solver" => "CPLEX", "CPX_PARAM_EPINT" => 0.0, "CPX_PARAM_EPGAP" => 1.0e-9)))
[ Info: Running Benders decomposition
[ Info: Dict{String, Any}("CPX_PARAM_EPRHS" => 1.0e-9, "solver" => "CPLEX", "CPX_PARAM_EPINT" => 0.0, "CPX_PARAM_EPGAP" => 1.0e-9)
[ Info: Dict{String, Any}("CPX_PARAM_EPRHS" => 1.0e-9, "solver" => "CPLEX", "CPX_PARAM_EPINT" => 0.0, "CPX_PARAM_EPGAP" => 1.0e-9)
[ Info: ("depth", 0)
[ Info: ("node_count", 0)
[ Info: ("depth", 0)
[ Info: ("node_count", 0)
[ Info: ("depth", 1)
[ Info: ("node_count", 1)
[ Info: ("depth", 1)
[ Info: ("node_count", 1)
[ Info: ("depth", 1)
[ Info: ("node_count", 2)
[ Info: ("depth", 1)
[ Info: ("node_count", 2)
[ Info: ("depth", 1)
[ Info: ("node_count", 2)
[ Info: ("depth", 1)
[ Info: ("node_count", 2)
[ Info: ("depth", 2)
[ Info: ("node_count", 3)
[ Info: ("depth", 2)
[ Info: ("node_count", 3)
[ Info: ("depth", 2)
[ Info: ("node_count", 4)
[ Info: ("depth", 2)
[ Info: ("node_count", 4)
[ Info: ("depth", 2)
[ Info: ("node_count", 4)
[ Info: ("depth", 2)
[ Info: ("node_count", 4)
[ Info: ("depth", 3)
[ Info: ("node_count", 5)
[ Info: ("depth", 3)
[ Info: ("node_count", 5)
[ Info: ("depth", 3)
[ Info: ("node_count", 6)
[ Info: ("depth", 3)
[ Info: ("node_count", 6)
[ Info: ("depth", 4)
[ Info: ("node_count", 7)
[ Info: ("depth", 4)
[ Info: ("node_count", 7)
[ Info: ("depth", 4)
[ Info: ("node_count", 7)
[ Info: ("depth", 4)
[ Info: ("node_count", 8)
[ Info: ("depth", 4)
[ Info: ("node_count", 8)
[ Info: ("depth", 4)
[ Info: ("node_count", 8)
[ Info: ("depth", 5)
[ Info: ("node_count", 9)
[ Info: ("depth", 5)
[ Info: ("node_count", 9)
[ Info: ("depth", 5)
[ Info: ("node_count", 10)
[ Info: ("depth", 5)
[ Info: ("node_count", 10)
[ Info: ("depth", 5)
[ Info: ("node_count", 10)
[ Info: ("depth", 5)
[ Info: ("node_count", 10)
[ Info: ("depth", 4)
[ Info: ("node_count", 49)
[ Info: ("depth", 4)
[ Info: ("node_count", 49)
[ Info: ("depth", 5)
[ Info: ("node_count", 50)
[ Info: ("depth", 5)
[ Info: ("node_count", 50)
[ Info: ("depth", 5)
[ Info: ("node_count", 50)
[ Info: ("depth", 5)
[ Info: ("node_count", 51)
[ Info: ("depth", 5)
[ Info: ("node_count", 51)
[ Info: ("depth", 5)
[ Info: ("node_count", 51)
[ Info: ("depth", 5)
[ Info: ("node_count", 51)
[ Info: ("depth", 4)
[ Info: ("node_count", 86)
[ Info: ("depth", 4)
[ Info: ("node_count", 86)
[ Info: ("depth", 4)
[ Info: ("node_count", 86)
[ Info: ("depth", 5)
[ Info: ("node_count", 87)
[ Info: ("depth", 5)
[ Info: ("node_count", 87)
[ Info: ("depth", 0)
[ Info: ("node_count", 470)
[ Info: ("depth", 0)
[ Info: ("node_count", 470)
[ Info: ("depth", 0)
[ Info: ("node_count", 470)
[ Info: ("depth", 1)
[ Info: ("node_count", 471)
[ Info: ("depth", 1)
[ Info: ("node_count", 471)
[ Info: ("depth", 2)
[ Info: ("node_count", 472)
[ Info: ("depth", 2)
[ Info: ("node_count", 472)
[ Info: ("depth", 3)
[ Info: ("node_count", 473)
[ Info: ("depth", 3)
[ Info: ("node_count", 473)
[ Info: ("depth", 3)
[ Info: ("node_count", 474)
[ Info: ("depth", 3)
[ Info: ("node_count", 474)
[ Info: ("depth", 4)
[ Info: ("node_count", 475)
[ Info: ("depth", 4)
[ Info: ("node_count", 475)
[ Info: ("depth", 4)
[ Info: ("node_count", 476)
[ Info: ("depth", 4)
[ Info: ("node_count", 476)
[ Info: ("depth", 5)
[ Info: ("node_count", 477)
[ Info: ("depth", 5)
[ Info: ("node_count", 477)
[ Info: ("depth", 5)
[ Info: ("node_count", 477)
[ Info: ("depth", 5)
[ Info: ("node_count", 477)
[ Info: ("depth", 5)
[ Info: ("node_count", 477)
[ Info: ("depth", 5)
[ Info: ("node_count", 478)
[ Info: ("depth", 5)
[ Info: ("node_count", 478)
[ Info: ("depth", 5)
[ Info: ("node_count", 478)
[ Info: ("depth", 5)
[ Info: ("node_count", 478)
[ Info: ("depth", 1)
[ Info: ("node_count", 822)
[ Info: ("depth", 1)
[ Info: ("node_count", 822)
[ Info: ("depth", 2)
[ Info: ("node_count", 823)
[ Info: ("depth", 2)
[ Info: ("node_count", 823)
[ Info: ("depth", 3)
[ Info: ("node_count", 824)
[ Info: ("depth", 3)
[ Info: ("node_count", 824)
[ Info: ("depth", 3)
[ Info: ("node_count", 824)
[ Info: ("depth", 3)
[ Info: ("node_count", 824)
[ Info: ("depth", 4)
[ Info: ("node_count", 825)
[ Info: ("depth", 4)
[ Info: ("node_count", 825)
[ Info: ("depth", 4)
[ Info: ("node_count", 825)
[ Info: ("depth", 5)
[ Info: ("node_count", 826)
[ Info: ("depth", 5)
[ Info: ("node_count", 826)
[ Info: ("depth", 2)
[ Info: ("node_count", 1027)
[ Info: ("depth", 2)
[ Info: ("node_count", 1027)
[ Info: ("depth", 2)
[ Info: ("node_count", 1027)
[ Info: ("depth", 2)
[ Info: ("node_count", 1027)
[ Info: ("depth", 2)
[ Info: ("node_count", 1027)
[ Info: ("depth", 2)
[ Info: ("node_count", 1027)
[ Info: ("depth", 2)
[ Info: ("node_count", 1072)
[ Info: ("depth", 2)
[ Info: ("node_count", 1072)
[ Info: ("depth", 3)
[ Info: ("node_count", 1073)
[ Info: ("depth", 3)
[ Info: ("node_count", 1073)
[ Info: ("depth", 3)
[ Info: ("node_count", 1073)
[ Info: ("depth", 3)
[ Info: ("node_count", 1073)
[ Info: ("depth", 3)
[ Info: ("node_count", 1073)
[ Info: ("depth", 3)
[ Info: ("node_count", 1073)
[ Info: ("depth", 3)
[ Info: ("node_count", 1073)
[ Info: ("depth", 3)
[ Info: ("node_count", 1073)
[ Info: ("depth", 3)
[ Info: ("node_count", 1073)
[ Info: ("depth", 3)
[ Info: ("node_count", 1073)
[ Info: ("depth", 3)
[ Info: ("node_count", 1073)
[ Info: ("depth", 3)
[ Info: ("node_count", 1073)
[ Info: ("depth", 4)
[ Info: ("node_count", 1074)
[ Info: ("depth", 4)
[ Info: ("node_count", 1074)
[ Info: ("depth", 5)
[ Info: ("node_count", 1075)
[ Info: ("depth", 5)
[ Info: ("node_count", 1075)
[ Info: ("depth", 5)
[ Info: ("node_count", 1075)
[ Info: ("depth", 3)
[ Info: ("node_count", 1234)
[ Info: ("depth", 3)
[ Info: ("node_count", 1234)
[ Info: ("depth", 3)
[ Info: ("node_count", 1234)
[ Info: ("depth", 3)
[ Info: ("node_count", 1234)
[ Info: ("depth", 4)
[ Info: ("node_count", 1235)
[ Info: ("depth", 4)
[ Info: ("node_count", 1235)
[ Info: ("depth", 4)
[ Info: ("node_count", 1235)
[ Info: ("depth", 4)
[ Info: ("node_count", 1236)
[ Info: ("depth", 4)
[ Info: ("node_count", 1236)
[ Info: ("depth", 4)
[ Info: ("node_count", 1236)
[ Info: ("depth", 4)
[ Info: ("node_count", 1236)
[ Info: ("depth", 5)
[ Info: ("node_count", 1237)
[ Info: ("depth", 5)
[ Info: ("node_count", 1237)
[ Info: ("depth", 4)
[ Info: ("node_count", 1578)
[ Info: ("depth", 4)
[ Info: ("node_count", 1578)
[ Info: ("depth", 4)
[ Info: ("node_count", 1578)
[ Info: ("depth", 4)
[ Info: ("node_count", 1578)
[ Info: ("depth", 4)
[ Info: ("node_count", 1578)
[ Info: ("depth", 5)
[ Info: ("node_count", 1579)
[ Info: ("depth", 5)
[ Info: ("node_count", 1579)
[ Info: ("depth", 5)
[ Info: ("node_count", 1868)
[ Info: ("depth", 5)
[ Info: ("node_count", 1868)
[ Info: ("depth", 5)
[ Info: ("node_count", 1868)
[ Info: ("depth", 5)
[ Info: ("node_count", 1868)
[ Info: ("depth", 5)
[ Info: ("node_count", 1868)
[ Info: ("depth", 5)
[ Info: ("node_count", 1868)
[ Info: ("depth", 3)
[ Info: ("node_count", 2020)
[ Info: ("depth", 3)
[ Info: ("node_count", 2020)
[ Info: ("depth", 4)
[ Info: ("node_count", 2021)
[ Info: ("depth", 4)
[ Info: ("node_count", 2021)
[ Info: ("depth", 4)
[ Info: ("node_count", 2021)
[ Info: ("depth", 4)
[ Info: ("node_count", 2022)
[ Info: ("depth", 4)
[ Info: ("node_count", 2022)
[ Info: ("depth", 4)
[ Info: ("node_count", 2022)
[ Info: ("depth", 4)
[ Info: ("node_count", 2022)
[ Info: ("depth", 5)
[ Info: ("node_count", 2023)
[ Info: ("depth", 5)
[ Info: ("node_count", 2023)
[ Info: ("depth", 3)
[ Info: ("node_count", 2080)
[ Info: ("depth", 3)
[ Info: ("node_count", 2080)
[ Info: ("depth", 3)
[ Info: ("node_count", 2080)
[ Info: ("depth", 3)
[ Info: ("node_count", 2080)
[ Info: ("depth", 4)
[ Info: ("node_count", 2081)
[ Info: ("depth", 4)
[ Info: ("node_count", 2081)
[ Info: ("depth", 4)
[ Info: ("node_count", 2081)
[ Info: ("depth", 5)
[ Info: ("node_count", 2082)
[ Info: ("depth", 5)
[ Info: ("node_count", 2082)
[ Info: ("depth", 4)
[ Info: ("node_count", 2744)
[ Info: ("depth", 4)
[ Info: ("node_count", 2744)
[ Info: ("depth", 4)
[ Info: ("node_count", 2744)
[ Info: ("depth", 5)
[ Info: ("node_count", 2745)
[ Info: ("depth", 5)
[ Info: ("node_count", 2745)
[ Info: ("depth", 4)
[ Info: ("node_count", 2812)
[ Info: ("depth", 4)
[ Info: ("node_count", 2812)
[ Info: ("depth", 5)
[ Info: ("node_count", 2813)
[ Info: ("depth", 5)
[ Info: ("node_count", 2813)
[ Info: ("depth", 5)
[ Info: ("node_count", 2813)
[ Info: ("depth", 5)
[ Info: ("node_count", 3153)
[ Info: ("depth", 5)
[ Info: ("node_count", 3153)
[ Info: ("depth", 5)
[ Info: ("node_count", 3999)
[ Info: ("depth", 5)
[ Info: ("node_count", 3999)
[ Info: ("depth", 5)
[ Info: ("node_count", 4059)
[ Info: ("depth", 5)
[ Info: ("node_count", 4059)
[ Info: ("depth", 5)
[ Info: ("node_count", 4059)
[ Info: ("depth", 5)
[ Info: ("node_count", 4347)
[ Info: ("depth", 5)
[ Info: ("node_count", 4347)
[ Info: ("depth", 5)
[ Info: ("node_count", 4347)
[ Info: ("depth", 5)
[ Info: ("node_count", 4347)
[ Info: ("depth", 3)
[ Info: ("node_count", 9738)
[ Info: ("depth", 3)
[ Info: ("node_count", 9738)
[ Info: ("depth", 3)
[ Info: ("node_count", 9738)
[ Info: ("depth", 4)
[ Info: ("node_count", 9739)
[ Info: ("depth", 4)
[ Info: ("node_count", 9739)
[ Info: ("depth", 4)
[ Info: ("node_count", 9739)
[ Info: ("depth", 4)
[ Info: ("node_count", 9739)
[ Info: ("depth", 5)
[ Info: ("node_count", 9740)
[ Info: ("depth", 5)
[ Info: ("node_count", 9740)
[ Info: ("depth", 5)
[ Info: ("node_count", 9740)
[ Info: ("depth", 5)
[ Info: ("node_count", 9740)
[ Info: ("depth", 4)
[ Info: ("node_count", 9871)
[ Info: ("depth", 4)
[ Info: ("node_count", 9871)
[ Info: ("depth", 4)
[ Info: ("node_count", 9871)
[ Info: ("depth", 5)
[ Info: ("node_count", 9872)
[ Info: ("depth", 5)
[ Info: ("node_count", 9872)
[ Info: ("depth", 5)
[ Info: ("node_count", 13139)
[ Info: ("depth", 5)
[ Info: ("node_count", 13139)
[ Info: ("depth", 5)
[ Info: ("node_count", 13139)
[ Info: ("depth", 5)
[ Info: ("node_count", 13139)
[ Info: ("depth", 5)
[ Info: ("node_count", 14046)
[ Info: ("depth", 5)
[ Info: ("node_count", 14046)
[ Info: ("depth", 5)
[ Info: ("node_count", 14046)
[ Info: ("depth", 4)
[ Info: ("node_count", 14383)
[ Info: ("depth", 4)
[ Info: ("node_count", 14383)
[ Info: ("depth", 5)
[ Info: ("node_count", 14384)
[ Info: ("depth", 5)
[ Info: ("node_count", 14384)
[ Info: ("depth", 5)
[ Info: ("node_count", 16198)
[ Info: ("depth", 5)
[ Info: ("node_count", 16198)
[ Info: ("depth", 5)
[ Info: ("node_count", 16218)
[ Info: ("depth", 5)
[ Info: ("node_count", 16218)
[ Info: ("depth", 5)
[ Info: ("node_count", 17572)
[ Info: ("depth", 5)
[ Info: ("node_count", 17572)
[ Info: ("depth", 5)
[ Info: ("node_count", 17572)
[ Info: ("depth", 0)
[ Info: ("node_count", 19492)
[ Info: ("depth", 0)
[ Info: ("node_count", 19492)
[ Info: ("depth", 1)
[ Info: ("node_count", 19493)
[ Info: ("depth", 1)
[ Info: ("node_count", 19493)
[ Info: ("depth", 2)
[ Info: ("node_count", 19494)
[ Info: ("depth", 2)
[ Info: ("node_count", 19494)
[ Info: ("depth", 3)
[ Info: ("node_count", 19495)
[ Info: ("depth", 3)
[ Info: ("node_count", 19495)
[ Info: ("depth", 3)
[ Info: ("node_count", 19496)
[ Info: ("depth", 3)
[ Info: ("node_count", 19496)
[ Info: ("depth", 3)
[ Info: ("node_count", 19496)
[ Info: ("depth", 3)
[ Info: ("node_count", 19496)
[ Info: ("depth", 3)
[ Info: ("node_count", 19496)
[ Info: ("depth", 3)
[ Info: ("node_count", 19496)
[ Info: ("depth", 3)
[ Info: ("node_count", 19496)
[ Info: ("depth", 3)
[ Info: ("node_count", 19496)
[ Info: ("depth", 3)
[ Info: ("node_count", 19496)
[ Info: ("depth", 3)
[ Info: ("node_count", 19496)
[ Info: ("depth", 3)
[ Info: ("node_count", 19496)
┌ Info: node count
└   JuMP.node_count(env.master.model) = 19496
┌ Info: elapsed time
└   time() - start_time = 7214.073960065842
[ Info: ("pure callback time", 7093.100183010101)
┌ Info: objective bound
└   JuMP.objective_bound(env.master.model) = 533943.7396174269
┌ Info: objective value
└   JuMP.objective_value(env.master.model) = 538095.0
┌ Info: relative gap
└   JuMP.relative_gap(env.master.model) = 0.007714735098027522
[ Info: Writing results to CSV
