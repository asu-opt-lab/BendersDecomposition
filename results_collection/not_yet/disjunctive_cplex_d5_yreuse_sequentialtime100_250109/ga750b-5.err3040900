
=====================================================================

Julia 1.10.4

To launch use the command "julia"

=====================================================================

  

=====================================================================

CPLEX 22.1.1

Using the command "cplex" will launch the program

=====================================================================

  

=====================================================================
This module is intended solely for building or source activating user
python environments, i.e.,

    mamba create -n myenv -c conda-forge

or

    source activate myenv

To list available environments, run:

    mamba info --envs

See our docs: https://links.asu.edu/solpy

Any other use is NOT TESTED.
=====================================================================

  

=====================================================================
Gurobi 11.0.2

To use this software, use the command gurobi.sh
=====================================================================

  
[ Info: Dict{String, Any}("algorithm_params" => Dict{String, Any}("time_limit" => 7200.0, "verbose" => false, "solver" => "CPLEX", "gap_tolerance" => 1.0e-9), "cut_strategy" => Dict{String, Any}("include_master_cuts" => true, "use_two_sided_cuts" => true, "norm_type" => "L1NORM", "reuse_dcglp" => true, "verbose" => false, "cut_strengthening" => "PURE_DISJUNCTION", "type" => "DISJUNCTIVE_CUT", "base_cut_strategy" => "FAT_KNAPSACK_CUT"), "solver_params" => Dict{String, Any}("sub" => Dict{String, Any}("CPX_PARAM_EPRHS" => 1.0e-9, "solver" => "CPLEX", "CPX_PARAM_EPINT" => 0.0, "CPX_PARAM_EPGAP" => 1.0e-9), "master" => Dict{String, Any}("CPX_PARAM_EPRHS" => 1.0e-9, "solver" => "CPLEX", "CPX_PARAM_EPINT" => 0.0, "CPX_PARAM_EPGAP" => 1.0e-9), "dcglp" => Dict{String, Any}("CPX_PARAM_EPRHS" => 1.0e-9, "solver" => "CPLEX", "CPX_PARAM_EPINT" => 0.0, "CPX_PARAM_EPGAP" => 1.0e-9)))
[ Info: Running Benders decomposition
[ Info: Dict{String, Any}("CPX_PARAM_EPRHS" => 1.0e-9, "solver" => "CPLEX", "CPX_PARAM_EPINT" => 0.0, "CPX_PARAM_EPGAP" => 1.0e-9)
[ Info: Dict{String, Any}("CPX_PARAM_EPRHS" => 1.0e-9, "solver" => "CPLEX", "CPX_PARAM_EPINT" => 0.0, "CPX_PARAM_EPGAP" => 1.0e-9)
[ Info: ("depth", 0)
[ Info: ("node_count", 0)
[ Info: ("depth", 0)
[ Info: ("node_count", 0)
[ Info: ("depth", 0)
[ Info: ("node_count", 0)
[ Info: ("depth", 0)
[ Info: ("node_count", 0)
[ Info: ("depth", 0)
[ Info: ("node_count", 0)
[ Info: ("depth", 0)
[ Info: ("node_count", 0)
[ Info: ("depth", 0)
[ Info: ("node_count", 0)
[ Info: ("depth", 0)
[ Info: ("node_count", 0)
[ Info: ("depth", 0)
[ Info: ("node_count", 0)
[ Info: ("depth", 0)
[ Info: ("node_count", 0)
[ Info: ("depth", 1)
[ Info: ("node_count", 1)
[ Info: ("depth", 1)
[ Info: ("node_count", 1)
[ Info: ("depth", 1)
[ Info: ("node_count", 1)
[ Info: ("depth", 1)
[ Info: ("node_count", 1)
[ Info: ("depth", 1)
[ Info: ("node_count", 1)
[ Info: ("depth", 1)
[ Info: ("node_count", 1)
[ Info: ("depth", 1)
[ Info: ("node_count", 1)
[ Info: ("depth", 1)
[ Info: ("node_count", 1)
[ Info: ("depth", 1)
[ Info: ("node_count", 1)
[ Info: ("depth", 1)
[ Info: ("node_count", 1)
[ Info: ("depth", 1)
[ Info: ("node_count", 1)
[ Info: ("depth", 1)
[ Info: ("node_count", 1)
[ Info: ("depth", 1)
[ Info: ("node_count", 1)
[ Info: ("depth", 1)
[ Info: ("node_count", 2)
[ Info: ("depth", 1)
[ Info: ("node_count", 2)
[ Info: ("depth", 1)
[ Info: ("node_count", 2)
[ Info: ("depth", 1)
[ Info: ("node_count", 2)
[ Info: ("depth", 1)
[ Info: ("node_count", 2)
[ Info: ("depth", 1)
[ Info: ("node_count", 2)
[ Info: ("depth", 1)
[ Info: ("node_count", 2)
[ Info: ("depth", 1)
[ Info: ("node_count", 2)
[ Info: ("depth", 1)
[ Info: ("node_count", 2)
[ Info: ("depth", 1)
[ Info: ("node_count", 2)
[ Info: ("depth", 2)
[ Info: ("node_count", 3)
[ Info: ("depth", 2)
[ Info: ("node_count", 3)
[ Info: ("depth", 2)
[ Info: ("node_count", 4)
[ Info: ("depth", 2)
[ Info: ("node_count", 4)
[ Info: ("depth", 2)
[ Info: ("node_count", 4)
[ Info: ("depth", 2)
[ Info: ("node_count", 4)
[ Info: ("depth", 2)
[ Info: ("node_count", 4)
[ Info: ("depth", 2)
[ Info: ("node_count", 4)
[ Info: ("depth", 2)
[ Info: ("node_count", 4)
[ Info: ("depth", 2)
[ Info: ("node_count", 4)
[ Info: ("depth", 2)
[ Info: ("node_count", 4)
[ Info: ("depth", 2)
[ Info: ("node_count", 4)
[ Info: ("depth", 3)
[ Info: ("node_count", 5)
[ Info: ("depth", 3)
[ Info: ("node_count", 5)
[ Info: ("depth", 3)
[ Info: ("node_count", 6)
[ Info: ("depth", 3)
[ Info: ("node_count", 6)
[ Info: ("depth", 3)
[ Info: ("node_count", 6)
[ Info: ("depth", 3)
[ Info: ("node_count", 6)
[ Info: ("depth", 3)
[ Info: ("node_count", 6)
[ Info: ("depth", 4)
[ Info: ("node_count", 7)
[ Info: ("depth", 4)
[ Info: ("node_count", 7)
[ Info: ("depth", 4)
[ Info: ("node_count", 7)
[ Info: ("depth", 4)
[ Info: ("node_count", 8)
[ Info: ("depth", 4)
[ Info: ("node_count", 8)
[ Info: ("depth", 4)
[ Info: ("node_count", 8)
[ Info: ("depth", 4)
[ Info: ("node_count", 8)
[ Info: ("depth", 4)
[ Info: ("node_count", 8)
[ Info: ("depth", 4)
[ Info: ("node_count", 8)
[ Info: ("depth", 4)
[ Info: ("node_count", 8)
[ Info: ("depth", 4)
[ Info: ("node_count", 8)
[ Info: ("depth", 4)
[ Info: ("node_count", 8)
[ Info: ("depth", 4)
[ Info: ("node_count", 8)
[ Info: ("depth", 4)
[ Info: ("node_count", 8)
[ Info: ("depth", 4)
[ Info: ("node_count", 8)
[ Info: ("depth", 4)
[ Info: ("node_count", 8)
[ Info: ("depth", 4)
[ Info: ("node_count", 8)
[ Info: ("depth", 5)
[ Info: ("node_count", 9)
[ Info: ("depth", 5)
[ Info: ("node_count", 9)
[ Info: ("depth", 5)
[ Info: ("node_count", 10)
[ Info: ("depth", 5)
[ Info: ("node_count", 10)
[ Info: ("depth", 5)
[ Info: ("node_count", 10)
[ Info: ("depth", 5)
[ Info: ("node_count", 10)
[ Info: ("depth", 5)
[ Info: ("node_count", 10)
[ Info: ("depth", 5)
[ Info: ("node_count", 10)
[ Info: ("depth", 5)
[ Info: ("node_count", 10)
[ Info: ("depth", 5)
[ Info: ("node_count", 10)
[ Info: ("depth", 4)
[ Info: ("node_count", 70)
[ Info: ("depth", 4)
[ Info: ("node_count", 70)
[ Info: ("depth", 4)
[ Info: ("node_count", 70)
[ Info: ("depth", 5)
[ Info: ("node_count", 71)
[ Info: ("depth", 5)
[ Info: ("node_count", 71)
[ Info: ("depth", 5)
[ Info: ("node_count", 71)
[ Info: ("depth", 5)
[ Info: ("node_count", 71)
[ Info: ("depth", 5)
[ Info: ("node_count", 72)
[ Info: ("depth", 5)
[ Info: ("node_count", 72)
[ Info: ("depth", 5)
[ Info: ("node_count", 72)
[ Info: ("depth", 5)
[ Info: ("node_count", 72)
[ Info: ("depth", 4)
[ Info: ("node_count", 123)
[ Info: ("depth", 4)
[ Info: ("node_count", 123)
[ Info: ("depth", 4)
[ Info: ("node_count", 123)
[ Info: ("depth", 5)
[ Info: ("node_count", 124)
[ Info: ("depth", 5)
[ Info: ("node_count", 124)
[ Info: ("depth", 0)
[ Info: ("node_count", 500)
[ Info: ("depth", 0)
[ Info: ("node_count", 500)
[ Info: ("depth", 0)
[ Info: ("node_count", 500)
[ Info: ("depth", 0)
[ Info: ("node_count", 500)
[ Info: ("depth", 0)
[ Info: ("node_count", 500)
[ Info: ("depth", 0)
[ Info: ("node_count", 500)
[ Info: ("depth", 1)
[ Info: ("node_count", 501)
[ Info: ("depth", 1)
[ Info: ("node_count", 501)
[ Info: ("depth", 2)
[ Info: ("node_count", 502)
[ Info: ("depth", 2)
[ Info: ("node_count", 502)
[ Info: ("depth", 2)
[ Info: ("node_count", 503)
[ Info: ("depth", 2)
[ Info: ("node_count", 503)
[ Info: ("depth", 2)
[ Info: ("node_count", 503)
[ Info: ("depth", 2)
[ Info: ("node_count", 503)
[ Info: ("depth", 2)
[ Info: ("node_count", 503)
[ Info: ("depth", 2)
[ Info: ("node_count", 503)
[ Info: ("depth", 2)
[ Info: ("node_count", 503)
[ Info: ("depth", 2)
[ Info: ("node_count", 503)
[ Info: ("depth", 2)
[ Info: ("node_count", 503)
[ Info: ("depth", 2)
[ Info: ("node_count", 503)
[ Info: ("depth", 2)
[ Info: ("node_count", 503)
[ Info: ("depth", 3)
[ Info: ("node_count", 504)
[ Info: ("depth", 3)
[ Info: ("node_count", 504)
[ Info: ("depth", 3)
[ Info: ("node_count", 505)
[ Info: ("depth", 3)
[ Info: ("node_count", 505)
[ Info: ("depth", 3)
[ Info: ("node_count", 505)
[ Info: ("depth", 3)
[ Info: ("node_count", 505)
[ Info: ("depth", 3)
[ Info: ("node_count", 505)
[ Info: ("depth", 3)
[ Info: ("node_count", 505)
[ Info: ("depth", 3)
[ Info: ("node_count", 505)
[ Info: ("depth", 3)
[ Info: ("node_count", 505)
[ Info: ("depth", 3)
[ Info: ("node_count", 505)
[ Info: ("depth", 4)
[ Info: ("node_count", 506)
[ Info: ("depth", 4)
[ Info: ("node_count", 506)
[ Info: ("depth", 4)
[ Info: ("node_count", 506)
[ Info: ("depth", 4)
[ Info: ("node_count", 506)
[ Info: ("depth", 4)
[ Info: ("node_count", 506)
[ Info: ("depth", 5)
[ Info: ("node_count", 507)
[ Info: ("depth", 5)
[ Info: ("node_count", 507)
[ Info: ("depth", 5)
[ Info: ("node_count", 507)
[ Info: ("depth", 5)
[ Info: ("node_count", 507)
[ Info: ("depth", 5)
[ Info: ("node_count", 507)
[ Info: ("depth", 5)
[ Info: ("node_count", 507)
[ Info: ("depth", 5)
[ Info: ("node_count", 508)
[ Info: ("depth", 5)
[ Info: ("node_count", 508)
[ Info: ("depth", 5)
[ Info: ("node_count", 508)
[ Info: ("depth", 5)
[ Info: ("node_count", 508)
[ Info: ("depth", 5)
[ Info: ("node_count", 508)
[ Info: ("depth", 5)
[ Info: ("node_count", 508)
[ Info: ("depth", 1)
[ Info: ("node_count", 858)
[ Info: ("depth", 1)
[ Info: ("node_count", 858)
[ Info: ("depth", 1)
[ Info: ("node_count", 858)
[ Info: ("depth", 1)
[ Info: ("node_count", 858)
[ Info: ("depth", 1)
[ Info: ("node_count", 858)
[ Info: ("depth", 1)
[ Info: ("node_count", 858)
[ Info: ("depth", 2)
[ Info: ("node_count", 859)
[ Info: ("depth", 2)
[ Info: ("node_count", 859)
[ Info: ("depth", 2)
[ Info: ("node_count", 859)
[ Info: ("depth", 3)
[ Info: ("node_count", 860)
[ Info: ("depth", 3)
[ Info: ("node_count", 860)
[ Info: ("depth", 3)
[ Info: ("node_count", 860)
[ Info: ("depth", 3)
[ Info: ("node_count", 860)
[ Info: ("depth", 3)
[ Info: ("node_count", 860)
[ Info: ("depth", 3)
[ Info: ("node_count", 860)
[ Info: ("depth", 3)
[ Info: ("node_count", 861)
[ Info: ("depth", 3)
[ Info: ("node_count", 861)
[ Info: ("depth", 3)
[ Info: ("node_count", 861)
[ Info: ("depth", 3)
[ Info: ("node_count", 861)
[ Info: ("depth", 3)
[ Info: ("node_count", 861)
[ Info: ("depth", 4)
[ Info: ("node_count", 862)
[ Info: ("depth", 4)
[ Info: ("node_count", 862)
[ Info: ("depth", 5)
[ Info: ("node_count", 863)
[ Info: ("depth", 5)
[ Info: ("node_count", 863)
[ Info: ("depth", 5)
[ Info: ("node_count", 864)
[ Info: ("depth", 5)
[ Info: ("node_count", 864)
[ Info: ("depth", 5)
[ Info: ("node_count", 864)
[ Info: ("depth", 5)
[ Info: ("node_count", 864)
[ Info: ("depth", 5)
[ Info: ("node_count", 864)
[ Info: ("depth", 5)
[ Info: ("node_count", 864)
[ Info: ("depth", 5)
[ Info: ("node_count", 864)
[ Info: ("depth", 5)
[ Info: ("node_count", 864)
[ Info: ("depth", 5)
[ Info: ("node_count", 864)
[ Info: ("depth", 5)
[ Info: ("node_count", 864)
[ Info: ("depth", 4)
[ Info: ("node_count", 1131)
[ Info: ("depth", 4)
[ Info: ("node_count", 1131)
[ Info: ("depth", 4)
[ Info: ("node_count", 1131)
[ Info: ("depth", 4)
[ Info: ("node_count", 1131)
[ Info: ("depth", 4)
[ Info: ("node_count", 1131)
[ Info: ("depth", 4)
[ Info: ("node_count", 1131)
[ Info: ("depth", 5)
[ Info: ("node_count", 1302)
[ Info: ("depth", 5)
[ Info: ("node_count", 1302)
[ Info: ("depth", 5)
[ Info: ("node_count", 1502)
[ Info: ("depth", 5)
[ Info: ("node_count", 1502)
[ Info: ("depth", 5)
[ Info: ("node_count", 1502)
[ Info: ("depth", 5)
[ Info: ("node_count", 1502)
[ Info: ("depth", 5)
[ Info: ("node_count", 1502)
[ Info: ("depth", 5)
[ Info: ("node_count", 1502)
[ Info: ("depth", 5)
[ Info: ("node_count", 1502)
[ Info: ("depth", 2)
[ Info: ("node_count", 1902)
[ Info: ("depth", 2)
[ Info: ("node_count", 1902)
[ Info: ("depth", 2)
[ Info: ("node_count", 1902)
[ Info: ("depth", 2)
[ Info: ("node_count", 1902)
[ Info: ("depth", 2)
[ Info: ("node_count", 1902)
[ Info: ("depth", 2)
[ Info: ("node_count", 1902)
[ Info: ("depth", 3)
[ Info: ("node_count", 1903)
[ Info: ("depth", 3)
[ Info: ("node_count", 1903)
[ Info: ("depth", 3)
[ Info: ("node_count", 1903)
[ Info: ("depth", 3)
[ Info: ("node_count", 1903)
[ Info: ("depth", 4)
[ Info: ("node_count", 1904)
[ Info: ("depth", 4)
[ Info: ("node_count", 1904)
[ Info: ("depth", 4)
[ Info: ("node_count", 1904)
[ Info: ("depth", 4)
[ Info: ("node_count", 1904)
[ Info: ("depth", 4)
[ Info: ("node_count", 1904)
[ Info: ("depth", 5)
[ Info: ("node_count", 1905)
[ Info: ("depth", 5)
[ Info: ("node_count", 1905)
[ Info: ("depth", 5)
[ Info: ("node_count", 1905)
[ Info: ("depth", 5)
[ Info: ("node_count", 1905)
[ Info: ("depth", 3)
[ Info: ("node_count", 2102)
[ Info: ("depth", 3)
[ Info: ("node_count", 2102)
[ Info: ("depth", 4)
[ Info: ("node_count", 2103)
[ Info: ("depth", 4)
[ Info: ("node_count", 2103)
[ Info: ("depth", 4)
[ Info: ("node_count", 2103)
[ Info: ("depth", 4)
[ Info: ("node_count", 2103)
[ Info: ("depth", 5)
[ Info: ("node_count", 2104)
[ Info: ("depth", 5)
[ Info: ("node_count", 2104)
[ Info: ("depth", 5)
[ Info: ("node_count", 2104)
[ Info: ("depth", 5)
[ Info: ("node_count", 2104)
[ Info: ("depth", 5)
[ Info: ("node_count", 2104)
[ Info: ("depth", 3)
[ Info: ("node_count", 2302)
[ Info: ("depth", 3)
[ Info: ("node_count", 2302)
[ Info: ("depth", 3)
[ Info: ("node_count", 2302)
[ Info: ("depth", 4)
[ Info: ("node_count", 2303)
[ Info: ("depth", 4)
[ Info: ("node_count", 2303)
[ Info: ("depth", 4)
[ Info: ("node_count", 2303)
[ Info: ("depth", 5)
[ Info: ("node_count", 2304)
[ Info: ("depth", 5)
[ Info: ("node_count", 2304)
[ Info: ("depth", 5)
[ Info: ("node_count", 2304)
┌ Info: node count
└   JuMP.node_count(env.master.model) = 2304
┌ Info: elapsed time
└   time() - start_time = 7226.068747997284
[ Info: ("pure callback time", 7060.229140996933)
┌ Info: objective bound
└   JuMP.objective_bound(env.master.model) = 790256.0398302969
┌ Info: objective value
└   JuMP.objective_value(env.master.model) = 796585.0000000002
┌ Info: relative gap
└   JuMP.relative_gap(env.master.model) = 0.007945115925737175
[ Info: Writing results to CSV
