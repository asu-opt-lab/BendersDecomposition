
=====================================================================

Julia 1.10.4

To launch use the command "julia"

=====================================================================

  

=====================================================================

CPLEX 22.1.1

Using the command "cplex" will launch the program

=====================================================================

  

=====================================================================
This module is intended solely for building or source activating user
python environments, i.e.,

    mamba create -n myenv -c conda-forge

or

    source activate myenv

To list available environments, run:

    mamba info --envs

See our docs: https://links.asu.edu/solpy

Any other use is NOT TESTED.
=====================================================================

  

=====================================================================
Gurobi 11.0.2

To use this software, use the command gurobi.sh
=====================================================================

  
[ Info: Dict{String, Any}("algorithm_params" => Dict{String, Any}("time_limit" => 7200.0, "verbose" => false, "solver" => "CPLEX", "gap_tolerance" => 1.0e-9), "cut_strategy" => Dict{String, Any}("include_master_cuts" => true, "use_two_sided_cuts" => true, "norm_type" => "L1NORM", "reuse_dcglp" => true, "verbose" => false, "cut_strengthening" => "PURE_DISJUNCTION", "type" => "DISJUNCTIVE_CUT", "base_cut_strategy" => "FAT_KNAPSACK_CUT"), "solver_params" => Dict{String, Any}("sub" => Dict{String, Any}("CPX_PARAM_EPRHS" => 1.0e-9, "solver" => "CPLEX", "CPX_PARAM_EPINT" => 0.0, "CPX_PARAM_EPGAP" => 1.0e-9), "master" => Dict{String, Any}("CPX_PARAM_EPRHS" => 1.0e-9, "solver" => "CPLEX", "CPX_PARAM_EPINT" => 0.0, "CPX_PARAM_EPGAP" => 1.0e-9), "dcglp" => Dict{String, Any}("CPX_PARAM_EPRHS" => 1.0e-9, "solver" => "CPLEX", "CPX_PARAM_EPINT" => 0.0, "CPX_PARAM_EPGAP" => 1.0e-9)))
[ Info: Running Benders decomposition
[ Info: Dict{String, Any}("CPX_PARAM_EPRHS" => 1.0e-9, "solver" => "CPLEX", "CPX_PARAM_EPINT" => 0.0, "CPX_PARAM_EPGAP" => 1.0e-9)
[ Info: Dict{String, Any}("CPX_PARAM_EPRHS" => 1.0e-9, "solver" => "CPLEX", "CPX_PARAM_EPINT" => 0.0, "CPX_PARAM_EPGAP" => 1.0e-9)
[ Info: ("depth", 0)
[ Info: ("node_count", 0)
[ Info: ("depth", 0)
[ Info: ("node_count", 0)
[ Info: ("depth", 1)
[ Info: ("node_count", 1)
[ Info: ("depth", 1)
[ Info: ("node_count", 1)
[ Info: ("depth", 2)
[ Info: ("node_count", 2)
[ Info: ("depth", 2)
[ Info: ("node_count", 2)
[ Info: ("depth", 2)
[ Info: ("node_count", 3)
[ Info: ("depth", 2)
[ Info: ("node_count", 3)
[ Info: ("depth", 2)
[ Info: ("node_count", 3)
[ Info: ("depth", 3)
[ Info: ("node_count", 4)
[ Info: ("depth", 3)
[ Info: ("node_count", 4)
[ Info: ("depth", 3)
[ Info: ("node_count", 5)
[ Info: ("depth", 3)
[ Info: ("node_count", 5)
[ Info: ("depth", 3)
[ Info: ("node_count", 5)
[ Info: ("depth", 4)
[ Info: ("node_count", 6)
[ Info: ("depth", 4)
[ Info: ("node_count", 6)
[ Info: ("depth", 4)
[ Info: ("node_count", 6)
[ Info: ("depth", 4)
[ Info: ("node_count", 6)
[ Info: ("depth", 4)
[ Info: ("node_count", 7)
[ Info: ("depth", 4)
[ Info: ("node_count", 7)
[ Info: ("depth", 4)
[ Info: ("node_count", 7)
[ Info: ("depth", 4)
[ Info: ("node_count", 7)
[ Info: ("depth", 5)
[ Info: ("node_count", 8)
[ Info: ("depth", 5)
[ Info: ("node_count", 8)
[ Info: ("depth", 5)
[ Info: ("node_count", 8)
[ Info: ("depth", 5)
[ Info: ("node_count", 8)
[ Info: ("depth", 5)
[ Info: ("node_count", 9)
[ Info: ("depth", 5)
[ Info: ("node_count", 9)
[ Info: ("depth", 5)
[ Info: ("node_count", 9)
[ Info: ("depth", 1)
[ Info: ("node_count", 93)
[ Info: ("depth", 1)
[ Info: ("node_count", 93)
[ Info: ("depth", 2)
[ Info: ("node_count", 94)
[ Info: ("depth", 2)
[ Info: ("node_count", 94)
[ Info: ("depth", 2)
[ Info: ("node_count", 95)
[ Info: ("depth", 2)
[ Info: ("node_count", 95)
[ Info: ("depth", 2)
[ Info: ("node_count", 95)
[ Info: ("depth", 3)
[ Info: ("node_count", 96)
[ Info: ("depth", 3)
[ Info: ("node_count", 96)
[ Info: ("depth", 4)
[ Info: ("node_count", 97)
[ Info: ("depth", 4)
[ Info: ("node_count", 97)
[ Info: ("depth", 4)
[ Info: ("node_count", 97)
[ Info: ("depth", 4)
[ Info: ("node_count", 97)
[ Info: ("depth", 4)
[ Info: ("node_count", 98)
[ Info: ("depth", 4)
[ Info: ("node_count", 98)
[ Info: ("depth", 4)
[ Info: ("node_count", 98)
[ Info: ("depth", 5)
[ Info: ("node_count", 99)
[ Info: ("depth", 5)
[ Info: ("node_count", 99)
[ Info: ("depth", 5)
[ Info: ("node_count", 99)
[ Info: ("depth", 5)
[ Info: ("node_count", 99)
[ Info: ("depth", 4)
[ Info: ("node_count", 175)
[ Info: ("depth", 4)
[ Info: ("node_count", 175)
[ Info: ("depth", 5)
[ Info: ("node_count", 176)
[ Info: ("depth", 5)
[ Info: ("node_count", 176)
[ Info: ("depth", 4)
[ Info: ("node_count", 293)
[ Info: ("depth", 4)
[ Info: ("node_count", 293)
[ Info: ("depth", 5)
[ Info: ("node_count", 294)
[ Info: ("depth", 5)
[ Info: ("node_count", 294)
[ Info: ("depth", 5)
[ Info: ("node_count", 406)
[ Info: ("depth", 5)
[ Info: ("node_count", 406)
[ Info: ("depth", 5)
[ Info: ("node_count", 406)
[ Info: ("depth", 5)
[ Info: ("node_count", 406)
[ Info: ("depth", 0)
[ Info: ("node_count", 494)
[ Info: ("depth", 0)
[ Info: ("node_count", 494)
[ Info: ("depth", 0)
[ Info: ("node_count", 494)
[ Info: ("depth", 0)
[ Info: ("node_count", 494)
[ Info: ("depth", 1)
[ Info: ("node_count", 495)
[ Info: ("depth", 1)
[ Info: ("node_count", 495)
[ Info: ("depth", 2)
[ Info: ("node_count", 496)
[ Info: ("depth", 2)
[ Info: ("node_count", 496)
[ Info: ("depth", 2)
[ Info: ("node_count", 497)
[ Info: ("depth", 2)
[ Info: ("node_count", 497)
[ Info: ("depth", 3)
[ Info: ("node_count", 498)
[ Info: ("depth", 3)
[ Info: ("node_count", 498)
[ Info: ("depth", 3)
[ Info: ("node_count", 498)
[ Info: ("depth", 3)
[ Info: ("node_count", 499)
[ Info: ("depth", 3)
[ Info: ("node_count", 499)
[ Info: ("depth", 3)
[ Info: ("node_count", 499)
[ Info: ("depth", 3)
[ Info: ("node_count", 499)
[ Info: ("depth", 3)
[ Info: ("node_count", 499)
[ Info: ("depth", 3)
[ Info: ("node_count", 499)
[ Info: ("depth", 3)
[ Info: ("node_count", 499)
[ Info: ("depth", 3)
[ Info: ("node_count", 499)
[ Info: ("depth", 3)
[ Info: ("node_count", 499)
[ Info: ("depth", 3)
[ Info: ("node_count", 499)
[ Info: ("depth", 4)
[ Info: ("node_count", 500)
[ Info: ("depth", 4)
[ Info: ("node_count", 500)
[ Info: ("depth", 4)
[ Info: ("node_count", 500)
[ Info: ("depth", 4)
[ Info: ("node_count", 501)
[ Info: ("depth", 4)
[ Info: ("node_count", 501)
[ Info: ("depth", 4)
[ Info: ("node_count", 501)
[ Info: ("depth", 4)
[ Info: ("node_count", 501)
[ Info: ("depth", 5)
[ Info: ("node_count", 502)
[ Info: ("depth", 5)
[ Info: ("node_count", 502)
[ Info: ("depth", 5)
[ Info: ("node_count", 502)
[ Info: ("depth", 5)
[ Info: ("node_count", 502)
[ Info: ("depth", 5)
[ Info: ("node_count", 503)
[ Info: ("depth", 5)
[ Info: ("node_count", 503)
[ Info: ("depth", 1)
[ Info: ("node_count", 717)
[ Info: ("depth", 1)
[ Info: ("node_count", 717)
[ Info: ("depth", 2)
[ Info: ("node_count", 718)
[ Info: ("depth", 2)
[ Info: ("node_count", 718)
[ Info: ("depth", 2)
[ Info: ("node_count", 719)
[ Info: ("depth", 2)
[ Info: ("node_count", 719)
[ Info: ("depth", 3)
[ Info: ("node_count", 720)
[ Info: ("depth", 3)
[ Info: ("node_count", 720)
[ Info: ("depth", 3)
[ Info: ("node_count", 720)
[ Info: ("depth", 3)
[ Info: ("node_count", 720)
[ Info: ("depth", 4)
[ Info: ("node_count", 721)
[ Info: ("depth", 4)
[ Info: ("node_count", 721)
[ Info: ("depth", 4)
[ Info: ("node_count", 721)
[ Info: ("depth", 4)
[ Info: ("node_count", 721)
[ Info: ("depth", 4)
[ Info: ("node_count", 722)
[ Info: ("depth", 4)
[ Info: ("node_count", 722)
[ Info: ("depth", 4)
[ Info: ("node_count", 722)
[ Info: ("depth", 4)
[ Info: ("node_count", 722)
[ Info: ("depth", 5)
[ Info: ("node_count", 723)
[ Info: ("depth", 5)
[ Info: ("node_count", 723)
[ Info: ("depth", 5)
[ Info: ("node_count", 723)
[ Info: ("depth", 4)
[ Info: ("node_count", 919)
[ Info: ("depth", 4)
[ Info: ("node_count", 919)
[ Info: ("depth", 4)
[ Info: ("node_count", 920)
[ Info: ("depth", 4)
[ Info: ("node_count", 920)
[ Info: ("depth", 5)
[ Info: ("node_count", 921)
[ Info: ("depth", 5)
[ Info: ("node_count", 921)
[ Info: ("depth", 5)
[ Info: ("node_count", 921)
[ Info: ("depth", 5)
[ Info: ("node_count", 921)
[ Info: ("depth", 5)
[ Info: ("node_count", 921)
[ Info: ("depth", 5)
[ Info: ("node_count", 921)
[ Info: ("depth", 5)
[ Info: ("node_count", 1070)
[ Info: ("depth", 5)
[ Info: ("node_count", 1070)
[ Info: ("depth", 5)
[ Info: ("node_count", 1070)
[ Info: ("depth", 5)
[ Info: ("node_count", 1200)
[ Info: ("depth", 5)
[ Info: ("node_count", 1200)
[ Info: ("depth", 5)
[ Info: ("node_count", 1200)
[ Info: ("depth", 5)
[ Info: ("node_count", 1200)
[ Info: ("depth", 5)
[ Info: ("node_count", 1200)
[ Info: ("depth", 3)
[ Info: ("node_count", 1402)
[ Info: ("depth", 3)
[ Info: ("node_count", 1402)
[ Info: ("depth", 4)
[ Info: ("node_count", 1403)
[ Info: ("depth", 4)
[ Info: ("node_count", 1403)
[ Info: ("depth", 5)
[ Info: ("node_count", 1404)
[ Info: ("depth", 5)
[ Info: ("node_count", 1404)
[ Info: ("depth", 5)
[ Info: ("node_count", 1404)
[ Info: ("depth", 5)
[ Info: ("node_count", 1404)
[ Info: ("depth", 5)
[ Info: ("node_count", 1404)
[ Info: ("depth", 3)
[ Info: ("node_count", 1529)
[ Info: ("depth", 3)
[ Info: ("node_count", 1529)
[ Info: ("depth", 4)
[ Info: ("node_count", 1530)
[ Info: ("depth", 4)
[ Info: ("node_count", 1530)
[ Info: ("depth", 5)
[ Info: ("node_count", 1531)
[ Info: ("depth", 5)
[ Info: ("node_count", 1531)
[ Info: ("depth", 5)
[ Info: ("node_count", 1531)
[ Info: ("depth", 5)
[ Info: ("node_count", 1531)
[ Info: ("depth", 5)
[ Info: ("node_count", 1661)
[ Info: ("depth", 5)
[ Info: ("node_count", 1661)
[ Info: ("depth", 3)
[ Info: ("node_count", 1789)
[ Info: ("depth", 3)
[ Info: ("node_count", 1789)
[ Info: ("depth", 4)
[ Info: ("node_count", 1790)
[ Info: ("depth", 4)
[ Info: ("node_count", 1790)
[ Info: ("depth", 5)
[ Info: ("node_count", 1791)
[ Info: ("depth", 5)
[ Info: ("node_count", 1791)
[ Info: ("depth", 5)
[ Info: ("node_count", 1791)
[ Info: ("depth", 5)
[ Info: ("node_count", 1791)
[ Info: ("depth", 5)
[ Info: ("node_count", 1791)
[ Info: ("depth", 4)
[ Info: ("node_count", 1925)
[ Info: ("depth", 4)
[ Info: ("node_count", 1925)
[ Info: ("depth", 5)
[ Info: ("node_count", 1926)
[ Info: ("depth", 5)
[ Info: ("node_count", 1926)
[ Info: ("depth", 5)
[ Info: ("node_count", 1927)
[ Info: ("depth", 5)
[ Info: ("node_count", 1927)
[ Info: ("depth", 3)
[ Info: ("node_count", 2231)
[ Info: ("depth", 3)
[ Info: ("node_count", 2231)
[ Info: ("depth", 4)
[ Info: ("node_count", 2232)
[ Info: ("depth", 4)
[ Info: ("node_count", 2232)
[ Info: ("depth", 4)
[ Info: ("node_count", 2232)
[ Info: ("depth", 5)
[ Info: ("node_count", 2233)
[ Info: ("depth", 5)
[ Info: ("node_count", 2233)
[ Info: ("depth", 5)
[ Info: ("node_count", 2233)
[ Info: ("depth", 3)
[ Info: ("node_count", 2342)
[ Info: ("depth", 3)
[ Info: ("node_count", 2342)
[ Info: ("depth", 4)
[ Info: ("node_count", 2343)
[ Info: ("depth", 4)
[ Info: ("node_count", 2343)
[ Info: ("depth", 5)
[ Info: ("node_count", 2344)
[ Info: ("depth", 5)
[ Info: ("node_count", 2344)
┌ Info: node count
└   JuMP.node_count(env.master.model) = 2344
┌ Info: elapsed time
└   time() - start_time = 7557.6122398376465
[ Info: ("pure callback time", 7039.790975809097)
┌ Info: objective bound
└   JuMP.objective_bound(env.master.model) = 762618.2192184249
┌ Info: objective value
└   JuMP.objective_value(env.master.model) = 763902.0000000017
┌ Info: relative gap
└   JuMP.relative_gap(env.master.model) = 0.0016805569059602835
[ Info: Writing results to CSV
